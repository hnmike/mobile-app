package com.example.appdocbao.ui.home;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;

import com.bumptech.glide.Glide;
import com.example.appdocbao.ui.newsdetail.NewsDetailActivity;
import com.example.appdocbao.R;
import com.example.appdocbao.data.News;
import com.example.appdocbao.data.model.Category;
import com.example.appdocbao.ui.newslist.NewsAdapter;
import com.example.appdocbao.ui.newslist.NewsListActivity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class HomeActivity extends AppCompatActivity {

    private RecyclerView rvCategories;
    private SwipeRefreshLayout swipeRefreshLayout;
    
    private HomeCategoriesAdapter homeCategoriesAdapter;
    
    private List<News> allNewsList = new ArrayList<>();
    private List<Category> categories = new ArrayList<>();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_home);
        
        // Kh·ªüi t·∫°o Toolbar
        Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        if (getSupportActionBar() != null) {
            getSupportActionBar().setDisplayHomeAsUpEnabled(true);
            getSupportActionBar().setTitle("Trang ch·ªß");
        }
        
        // Kh·ªüi t·∫°o c√°c view
        rvCategories = findViewById(R.id.rvCategories);
        swipeRefreshLayout = findViewById(R.id.swipeRefreshLayout);
        
        // Thi·∫øt l·∫≠p SwipeRefreshLayout
        swipeRefreshLayout.setOnRefreshListener(this::loadData);
        swipeRefreshLayout.setColorSchemeResources(
                android.R.color.holo_blue_bright,
                android.R.color.holo_green_light,
                android.R.color.holo_orange_light,
                android.R.color.holo_red_light
        );
        
        // Thi·∫øt l·∫≠p RecyclerView cho danh m·ª•c v√† b√†i vi·∫øt n·ªïi b·∫≠t c·ªßa m·ªói danh m·ª•c
        rvCategories.setLayoutManager(new LinearLayoutManager(this));
        homeCategoriesAdapter = new HomeCategoriesAdapter(this, new ArrayList<>(), new HashMap<>());
        rvCategories.setAdapter(homeCategoriesAdapter);
        
        // T·∫£i d·ªØ li·ªáu
        loadData();
    }

    private void loadData() {
        // Hi·ªÉn th·ªã loading indicator
        swipeRefreshLayout.setRefreshing(true);
        
        // T·∫°o tin t·ª©c
        allNewsList = createSampleNews();
        
        // L·ªçc tin t·ª©c n·ªïi b·∫≠t
        List<News> featuredNews = allNewsList.stream()
                .filter(News::isFeatured)
                .collect(Collectors.toList());
        
        // T·∫°o danh m·ª•c
        categories = createSampleCategories();
        
        // Th√™m "danh m·ª•c" ƒë·∫∑c bi·ªát cho b√†i vi·∫øt n·ªïi b·∫≠t ·ªü ƒë·∫ßu danh s√°ch
        Category featuredCategory = new Category("0", "B√†i vi·∫øt n·ªïi b·∫≠t", "C√°c b√†i vi·∫øt n·ªïi b·∫≠t tr√™n h·ªá th·ªëng", "üî•");
        List<Category> allCategories = new ArrayList<>();
        allCategories.add(featuredCategory);
        allCategories.addAll(categories);
        
        // Nh√≥m tin t·ª©c theo danh m·ª•c
        Map<Integer, List<News>> categoryNewsMap = new HashMap<>();
        // Th√™m danh s√°ch b√†i vi·∫øt n·ªïi b·∫≠t v√†o map v·ªõi ID l√† 0
        categoryNewsMap.put(0, featuredNews);
        
        for (Category category : categories) {
            final int categoryId = Integer.parseInt(category.getId());
            List<News> newsForCategory = allNewsList.stream()
                    .filter(news -> news.getCategoryId() == categoryId)
                    .limit(5) // Gi·ªõi h·∫°n 5 b√†i vi·∫øt cho m·ªói danh m·ª•c
                    .collect(Collectors.toList());
            categoryNewsMap.put(categoryId, newsForCategory);
        }
        
        // In th√¥ng tin debug
        for (Map.Entry<Integer, List<News>> entry : categoryNewsMap.entrySet()) {
            Log.d("HomeActivity", "Category ID: " + entry.getKey() + ", News count: " + 
                    (entry.getValue() != null ? entry.getValue().size() : 0));
        }
        
        // C·∫≠p nh·∫≠t adapter cho danh m·ª•c (ƒë√£ bao g·ªìm c·∫£ ph·∫ßn b√†i vi·∫øt n·ªïi b·∫≠t)
        homeCategoriesAdapter.updateData(allCategories, categoryNewsMap);
        
        // ·∫®n loading indicator
        swipeRefreshLayout.setRefreshing(false);
        
        // Th√¥ng b√°o cho ng∆∞·ªùi d√πng bi·∫øt d·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c t·∫£i
        Toast.makeText(this, "ƒê√£ t·∫£i d·ªØ li·ªáu m·ªõi nh·∫•t", Toast.LENGTH_SHORT).show();
    }

    private List<Category> createSampleCategories() {
        List<Category> categoriesList = new ArrayList<>();
        // S·ª≠ d·ª•ng constructor hi·ªán c√≥ (String id, String name, String description, String iconEmoji)
        categoriesList.add(new Category("1", "Th·ªùi s·ª±", "Tin t·ª©c th·ªùi s·ª± trong n∆∞·ªõc", "üì∞"));
        categoriesList.add(new Category("2", "Th·∫ø gi·ªõi", "Tin t·ª©c qu·ªëc t·∫ø", "üåé"));
        categoriesList.add(new Category("3", "Kinh doanh", "Tin t·ª©c kinh t·∫ø, t√†i ch√≠nh", "üíº"));
        categoriesList.add(new Category("4", "Gi·∫£i tr√≠", "Tin t·ª©c gi·∫£i tr√≠, showbiz", "üé≠"));
        categoriesList.add(new Category("5", "Th·ªÉ thao", "Tin t·ª©c th·ªÉ thao", "‚öΩ"));
        categoriesList.add(new Category("6", "Ph√°p lu·∫≠t", "Tin t·ª©c ph√°p lu·∫≠t", "‚öñÔ∏è"));
        categoriesList.add(new Category("7", "Gi√°o d·ª•c", "Tin t·ª©c gi√°o d·ª•c", "üéì"));
        categoriesList.add(new Category("8", "S·ª©c kh·ªèe", "Tin t·ª©c y t·∫ø, s·ª©c kh·ªèe", "üè•"));
        return categoriesList;
    }

    private List<News> createSampleNews() {
        List<News> newsList = new ArrayList<>();
        
        // Tin t·ª©c danh m·ª•c Th·ªùi s·ª±
        newsList.add(new News(1, "H∆°n 1.000 ng∆∞·ªùi di·ªÖn t·∫≠p ch·ªØa ch√°y ·ªü chung c∆∞ cao t·∫ßng", 
                "C√°c l·ª±c l∆∞·ª£ng ph·ªëi h·ª£p di·ªÖn t·∫≠p t√¨nh hu·ªëng ch√°y ·ªü t·∫ßng 15...", 
                "https://example.com/image1.jpg", "08:00 - 10/05/2023", 1, true));
        newsList.add(new News(2, "Nhi·ªÅu ƒë∆∞·ªùng TP HCM ng·∫≠p do tri·ªÅu c∆∞·ªùng",
                "ƒê∆∞·ªùng Hu·ª≥nh T·∫•n Ph√°t, Tr·∫ßn Xu√¢n So·∫°n... ng·∫≠p s√¢u...", 
                "https://example.com/image2.jpg", "10:30 - 10/05/2023", 1, false));
        newsList.add(new News(3, "Ng∆∞·ªùi m·∫´u Nga ƒë∆∞·ª£c 'b·∫£o l√£nh' tr·ªü l·∫°i Vi·ªát Nam",
                "Ekaterina Kuznetsova v·ªÅ n∆∞·ªõc sau khi ƒë∆∞·ª£c nh√† ngo·∫°i giao Vi·ªát Nam b·∫£o l√£nh...", 
                "https://example.com/image3.jpg", "14:15 - 10/05/2023", 1, false));
        
        // Tin t·ª©c danh m·ª•c Th·∫ø gi·ªõi
        newsList.add(new News(4, "Nh·∫≠t B·∫£n c√¢n nh·∫Øc chi 42 t·ª∑ USD h·ªó tr·ª£ gia ƒë√¨nh sinh con",
                "Ch√≠nh ph·ªß Nh·∫≠t B·∫£n c√¢n nh·∫Øc chi 6.000 t·ª∑ yen m·ªói nƒÉm ƒë·ªÉ tr·ª£ c·∫•p cho c√°c gia ƒë√¨nh sinh con...", 
                "https://example.com/image4.jpg", "07:45 - 10/05/2023", 2, true));
        newsList.add(new News(5, "ƒê·ªëi ph∆∞∆°ng c·ªßa Trump trong cu·ªôc tranh lu·∫≠n ng√†y 10/9",
                "Ph√≥ t·ªïng th·ªëng M·ªπ Kamala Harris c√≥ b·ªÅ d√†y kinh nghi·ªám tranh lu·∫≠n ch√≠nh tr·ªã...", 
                "https://example.com/image5.jpg", "09:20 - 10/05/2023", 2, false));
        
        // Tin t·ª©c danh m·ª•c Kinh doanh
        newsList.add(new News(6, "Gi√° v√†ng mi·∫øng gi·∫£m, nh·∫´n tƒÉng",
                "Gi√° v√†ng mi·∫øng SJC gi·∫£m 300.000 ƒë·ªìng m·ªói l∆∞·ª£ng...", 
                "https://example.com/image6.jpg", "15:40 - 10/05/2023", 3, true));
        newsList.add(new News(7, "Th·ªùi ƒë·∫°i c·ªßa 'ƒë·ªìng ƒë√¥ xanh' ƒëang k·∫øt th√∫c?",
                "V·ª• √°m s√°t T·ªïng th·ªëng Iran Raisi ƒëang th√∫c ƒë·∫©y Iran...", 
                "https://example.com/image7.jpg", "11:10 - 10/05/2023", 3, false));
        
        // Tin t·ª©c danh m·ª•c Gi·∫£i tr√≠
        newsList.add(new News(8, "C√¥ d√¢u duy nh·∫•t c·ªßa Jack Nicholson",
                "Sandra Knight l√† ng∆∞·ªùi ph·ª• n·ªØ duy nh·∫•t Jack Nicholson c∆∞·ªõi...", 
                "https://example.com/image8.jpg", "16:30 - 10/05/2023", 4, true));
        newsList.add(new News(9, "Jolie kh√¥ng mu·ªën Pitt g·∫∑p c√°c con",
                "Angelina Jolie kh√¥ng mu·ªën Brad Pitt c√≥ quan h·ªá v·ªõi c√°c con...", 
                "https://example.com/image9.jpg", "13:45 - 10/05/2023", 4, false));
        
        // Tin t·ª©c danh m·ª•c Th·ªÉ thao
        newsList.add(new News(10, "Lukaku ghi b√†n ng√†y ra m·∫Øt Napoli",
                "Romelu Lukaku m·∫•t ch∆∞a ƒë·∫ßy 10 ph√∫t ƒë·ªÉ ghi b√†n ra m·∫Øt...", 
                "https://example.com/image10.jpg", "08:15 - 10/05/2023", 5, true));
        newsList.add(new News(11, "Djokovic: 'T√¥i kh√¥ng th√≠ch ti·ªám c·∫≠n s·ª± ho√†n h·∫£o'",
                "Novak Djokovic kh√¥ng c√≤n kh√°t khao tr·ªçn v·∫πn m·ªçi kh√≠a c·∫°nh...", 
                "https://example.com/image11.jpg", "12:20 - 10/05/2023", 5, false));
        
        return newsList;
    }

    @Override
    public boolean onOptionsItemSelected(@NonNull MenuItem item) {
        if (item.getItemId() == android.R.id.home) {
            finish();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }

    // Inner adapter class cho danh m·ª•c v√† tin t·ª©c c·ªßa m·ªói danh m·ª•c
    private static class HomeCategoriesAdapter extends RecyclerView.Adapter<HomeCategoriesAdapter.CategoryViewHolder> {
        
        private Context context;
        private List<Category> categories;
        private Map<Integer, List<News>> categoryNewsMap;
        
        public HomeCategoriesAdapter(Context context, List<Category> categories, Map<Integer, List<News>> categoryNewsMap) {
            this.context = context;
            this.categories = categories;
            this.categoryNewsMap = categoryNewsMap;
        }
        
        @NonNull
        @Override
        public CategoryViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
            View view = LayoutInflater.from(context).inflate(R.layout.item_category_with_news, parent, false);
            return new CategoryViewHolder(view);
        }
        
        @Override
        public void onBindViewHolder(@NonNull CategoryViewHolder holder, int position) {
            Category category = categories.get(position);
            int categoryId;
            
            try {
                categoryId = Integer.parseInt(category.getId());
            } catch (NumberFormatException e) {
                Log.e("HomeCategoriesAdapter", "Failed to parse category ID: " + category.getId(), e);
                categoryId = 0;
            }
            
            holder.tvCategoryName.setText(category.getName());
            
            // L·∫•y danh s√°ch tin t·ª©c cho danh m·ª•c hi·ªán t·∫°i
            List<News> newsList = categoryNewsMap.get(categoryId);
            
            Log.d("HomeCategoriesAdapter", "Position: " + position + 
                    ", Category: " + category.getName() + 
                    ", ID: " + category.getId() + 
                    ", News count: " + (newsList != null ? newsList.size() : 0));
            
            if (newsList == null) {
                newsList = new ArrayList<>();
            }
            
            // Thi·∫øt l·∫≠p adapter cho RecyclerView tin t·ª©c c·ªßa danh m·ª•c
            CategoryNewsAdapter newsAdapter = new CategoryNewsAdapter(context, newsList);
            holder.rvCategoryNews.setLayoutManager(
                    new LinearLayoutManager(context, LinearLayoutManager.HORIZONTAL, false));
            holder.rvCategoryNews.setAdapter(newsAdapter);
            
            // X·ª≠ l√Ω s·ª± ki·ªán khi nh·∫•n v√†o "Xem t·∫•t c·∫£"
            holder.tvViewAll.setOnClickListener(v -> {
                Intent intent = new Intent(context, NewsListActivity.class);
                intent.putExtra("CATEGORY_ID", category.getId());
                intent.putExtra("CATEGORY_NAME", category.getName());
                context.startActivity(intent);
            });
            
            // ·∫®n n√∫t "Xem t·∫•t c·∫£" n·∫øu l√† danh m·ª•c b√†i vi·∫øt n·ªïi b·∫≠t (ID = 0)
            if ("0".equals(category.getId())) {
                holder.tvViewAll.setVisibility(View.GONE);
            } else {
                holder.tvViewAll.setVisibility(View.VISIBLE);
            }
        }
        
        @Override
        public int getItemCount() {
            return categories != null ? categories.size() : 0;
        }
        
        public void updateData(List<Category> categories, Map<Integer, List<News>> categoryNewsMap) {
            this.categories = categories;
            this.categoryNewsMap = categoryNewsMap;
            
            // Log th√¥ng tin debug
            Log.d("HomeCategoriesAdapter", "Updated with " + categories.size() + " categories");
            for (Category category : categories) {
                int catId = Integer.parseInt(category.getId());
                List<News> news = categoryNewsMap.get(catId);
                Log.d("HomeCategoriesAdapter", "Category: " + category.getName() + 
                        ", ID: " + category.getId() + 
                        ", Has news: " + (news != null) + 
                        ", News count: " + (news != null ? news.size() : 0));
            }
            
            notifyDataSetChanged();
        }
        
        static class CategoryViewHolder extends RecyclerView.ViewHolder {
            TextView tvCategoryName, tvViewAll;
            RecyclerView rvCategoryNews;
            
            public CategoryViewHolder(@NonNull View itemView) {
                super(itemView);
                tvCategoryName = itemView.findViewById(R.id.tvCategoryName);
                tvViewAll = itemView.findViewById(R.id.tvViewAll);
                rvCategoryNews = itemView.findViewById(R.id.rvCategoryNews);
            }
        }
    }

    // Inner adapter class cho tin t·ª©c trong m·ªói danh m·ª•c
    private static class CategoryNewsAdapter extends RecyclerView.Adapter<CategoryNewsAdapter.NewsViewHolder> {
        
        private Context context;
        private List<News> newsList;
        
        public CategoryNewsAdapter(Context context, List<News> newsList) {
            this.context = context;
            this.newsList = newsList;
            Log.d("CategoryNewsAdapter", "Constructor - News count: " + (newsList != null ? newsList.size() : 0));
        }
        
        @NonNull
        @Override
        public NewsViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
            View view = LayoutInflater.from(context).inflate(R.layout.item_news, parent, false);
            
            // ƒêi·ªÅu ch·ªânh chi·ªÅu r·ªông c·ªßa item ƒë·ªÉ hi·ªÉn th·ªã ƒë√∫ng trong RecyclerView ngang
            ViewGroup.LayoutParams params = view.getLayoutParams();
            params.width = (int) (parent.getWidth() * 0.8); // 80% chi·ªÅu r·ªông c·ªßa parent
            view.setLayoutParams(params);
            
            return new NewsViewHolder(view);
        }
        
        @Override
        public void onBindViewHolder(@NonNull NewsViewHolder holder, int position) {
            News news = newsList.get(position);
            
            Log.d("CategoryNewsAdapter", "Binding news at position " + position + 
                    ": " + news.getTitle() + 
                    ", Image URL: " + news.getImageUrl());
            
            holder.tvTitle.setText(news.getTitle());
            holder.tvDate.setText(news.getPublishDate());
            
            // S·ª≠ d·ª•ng Glide ƒë·ªÉ load h√¨nh ·∫£nh t·ª´ URL
            if (news.getImageUrl() != null && !news.getImageUrl().isEmpty()) {
                try {
                    Glide.with(context)
                            .load(news.getImageUrl())
                            .placeholder(R.drawable.placeholder_image)
                            .error(R.drawable.placeholder_image)
                            .into(holder.ivThumbnail);
                } catch (Exception e) {
                    Log.e("CategoryNewsAdapter", "Error loading image", e);
                    holder.ivThumbnail.setImageResource(R.drawable.placeholder_image);
                }
            } else {
                holder.ivThumbnail.setImageResource(R.drawable.placeholder_image);
            }
            
            // ƒê·∫£m b·∫£o th√¥ng tin ngu·ªìn ƒë∆∞·ª£c hi·ªÉn th·ªã ho·∫∑c ·∫©n n·∫øu kh√¥ng c√≥
            if (holder.tvSource != null) {
                holder.tvSource.setText("B√°o m·ªõi");
            }
            
            holder.itemView.setOnClickListener(v -> {
                Intent intent = new Intent(context, NewsDetailActivity.class);
                intent.putExtra("NEWS_ID", news.getId());
                context.startActivity(intent);
            });
        }
        
        @Override
        public int getItemCount() {
            return newsList != null ? newsList.size() : 0;
        }
        
        static class NewsViewHolder extends RecyclerView.ViewHolder {
            ImageView ivThumbnail;
            TextView tvTitle, tvDate, tvSource;
            
            public NewsViewHolder(@NonNull View itemView) {
                super(itemView);
                ivThumbnail = itemView.findViewById(R.id.imgThumbnail);
                tvTitle = itemView.findViewById(R.id.tvTitle);
                tvDate = itemView.findViewById(R.id.tvPublishedTime);
                tvSource = itemView.findViewById(R.id.tvSource);
            }
        }
    }
}